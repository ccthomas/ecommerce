services:
  localstack:
    image: localstack/localstack
    container_name: ${LOCALSTACK_CONTAINER_NAME}
    ports:
      - "4566:4566" # LocalStack gateway port
      - "4510:4510" # LocalStack metrics port (optional)
    environment:
      - DOCKER_HOST=unix:///var/run/docker.sock
      - SERVICES=s3,ssm
    volumes:
      - localstack_data:/var/lib/localstack
    networks:
      - my_network

  terraform:
    image: hashicorp/terraform:latest
    container_name: terraform
    volumes:
      - ./terraform:/workspace
    working_dir: /workspace
    networks:
      - my_network
    entrypoint: [ "/bin/sh", "-c", "terraform init && terraform apply -auto-approve" ]

  postgres-db:
    container_name: ${DB_CONTAINER_NAME}
    image: postgres:16
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "${DB_PORT}:${DB_PORT_INTERNAL}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql # Initialize DB
    networks:
      - my_network

  ecommerce-service:
    container_name: ecommerce-service
    build:
      context: ./ecommerce-service
    ports:
      - ${SERVERLESS_PORT}:${SERVERLESS_PORT}
    depends_on:
      - postgres-db
    networks:
      - my_network
    environment:
      PORT: ${SERVERLESS_PORT}
      LOCALSTACK_CONTAINER_NAME: ${LOCALSTACK_CONTAINER_NAME}
      S3_PRODUCT_IMAGE_BUCKET_NAME: ${S3_PRODUCT_IMAGE_BUCKET_NAME}
      S3_URL: ${S3_URL}
      S3_ENDPOINT: ${S3_ENDPOINT}
      SSM_ENDPOINT: ${SSM_ENDPOINT}
      NODE_ENV: development

  react-app:
    container_name: ecommerce-react-app
    build:
      context: ./ecommerce-react-app
      args:
        REACT_APP_PORT: ${REACT_APP_PORT}
        SERVICE_API: ${SERVERLESS_API}
    ports:
      - ${REACT_APP_PORT}:${REACT_APP_PORT}
    environment:
      NODE_ENV: production
    depends_on:
      - ecommerce-service

networks:
  my_network:
    driver: bridge

volumes:
  postgres_data:
  localstack_data:
